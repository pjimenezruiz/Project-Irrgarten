/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package irrgarten.UI;

import irrgarten.Directions;
import irrgarten.GameState;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import java.awt.*;

/**
 *
 * @author juan
 * @brief Ventana principal del juego
 */
public class UserInterface extends javax.swing.JFrame implements UI{    // File, new file, swing GUI forms, JFrame/JDialog form para hacer clases derivadas de JFrame o JDialog

//    private JTextArea JText;
//    private JLabel cPlayer;
//    private JLabel isWinner;
    
    private Cursors cursors;    // Objeto relacionado con los botones de movimiento del personaje
    private Button button;
    private Button2 button2;
    /**
     * Creates new form UserInterface
     */
    public UserInterface() {

        initComponents();
        setVisible(true);   // Hace la ventana visible
        cursors = new Cursors(this,true);
        button=new Button(this, true);
        button2=new Button2(this, true);
//        JText = new JTextArea();
//        cPlayer = new JLabel();
//        isWinner = new JLabel();  
        textArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN,14));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        isWinner = new javax.swing.JLabel();
        currentPlayer = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(currentPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(isWinner, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 804, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currentPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(isWinner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @brief Solicita al usuario una dirección delegando en el cuadro de diálogo
     * @param args the command line arguments
     */
    public Directions nextMove(){
        return cursors.getDirection();
    }
    
    public boolean pasarTurno() {
    
        return button.getPasar();
    }
    
    public boolean robarTurno() {
    
        return button2.getConservar();
    }
    /**
     * @brief Lee los campos del objeto gameState y los muestra gráficamente mediante TextArea y Jlabel
     * @param gameState Objeto con la información del juego
     */
    public void showGame(GameState gameState){  
        String text = gameState.getLabyrinth() + "\n" +  gameState.getPlayers()  + "\n" + gameState.getMonsters()+"\n" + gameState.getLog();
        textArea.setText(text); // TextArea (interactivo) para mostrar los datos del juego
        isWinner.setText("Is winner: " +String.valueOf(gameState.isWinner()));  // JLabel (no interactivo)
        currentPlayer.setText("Current Player: " + String.valueOf(gameState.getCurrentPlayer()));   // JLabel
        repaint();  // Actualiza la información
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currentPlayer;
    private javax.swing.JLabel isWinner;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
